services:
  leaderboard:
    build:
      context: leaderboard
      target: run
    restart: always
    depends_on:
      orchestrator:
        condition: service_started
      leaderboard_db:
        condition: service_healthy
    expose:
      - "${SERVICE_PORT}"
    environment:
      SERVICE_PORT: ${SERVICE_PORT}
    networks:
      - "net"
    deploy:
      mode: replicated
      replicas: ${N_REPLICAS_LEADERBOARD}
    profiles: ["run"]

  leaderboard_db:
    image: mariadb
    restart: always
    expose:
      - "3306"
    healthcheck:
        test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
        start_period: 1m
        start_interval: 10s
        interval: 1m
        timeout: 5s
        retries: 10
    environment:
      MARIADB_ROOT_PASSWORD: admin
    volumes:
      - ./leaderboard/db/setup.sql:/docker-entrypoint-initdb.d/init.sql
      - leaderboard_db:/var/lib/mysql
    networks:
      - "net"
    attach: false
    profiles: ["run"]

  ############# TEST #############
  
  test_leaderboard:
    build:
      context: leaderboard
      target: test
    depends_on:
      test_leaderboard_db:
        condition: service_healthy
    networks:
      - "test_net"
    profiles: ["test"]

  test_leaderboard_db:
    image: mariadb
    restart: always
    expose:
      - "3306"
    healthcheck:
        test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
        start_period: 1m
        start_interval: 10s
        interval: 1m
        timeout: 5s
        retries: 10
    environment:
      MARIADB_ROOT_PASSWORD: admin
    volumes:
      - ./leaderboard/db/setup_test.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - "test_net"
    attach: false
    profiles: ["test"]

networks:
  net:
    name: net
  test_net:
    name: test_net

  
volumes:
  leaderboard_db: